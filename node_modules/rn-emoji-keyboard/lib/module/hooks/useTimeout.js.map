{"version":3,"sources":["useTimeout.ts"],"names":["useCallback","useEffect","useRef","useTimeout","timeoutRef","current","clearTimeout","callback","time","setTimeout"],"mappings":"AAAA,SAA2BA,WAA3B,EAAwCC,SAAxC,EAAmDC,MAAnD,QAAiE,OAAjE;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAMC,UAAU,GAAGF,MAAM,CAAC,IAAD,CAAzB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,UAAIG,UAAU,CAACC,OAAf,EAAwB;AACtBC,QAAAA,YAAY,CAACF,UAAU,CAACC,OAAZ,CAAZ;AACD;AACF,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SAAOL,WAAW,CAAC,CAACO,QAAD,EAAuBC,IAAvB,KAAwC;AACzDJ,IAAAA,UAAU,CAACC,OAAX,GAAqBI,UAAU,CAACF,QAAD,EAAWC,IAAX,CAA/B;AACD,GAFiB,EAEf,EAFe,CAAlB;AAGD,CAdM","sourcesContent":["import { MutableRefObject, useCallback, useEffect, useRef } from 'react'\n\nexport const useTimeout = () => {\n  const timeoutRef = useRef(null) as MutableRefObject<ReturnType<typeof setTimeout> | null>\n\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n    }\n  }, [])\n\n  return useCallback((callback: () => void, time: number) => {\n    timeoutRef.current = setTimeout(callback, time)\n  }, [])\n}\n"]}