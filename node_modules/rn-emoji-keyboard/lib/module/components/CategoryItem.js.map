{"version":3,"sources":["CategoryItem.tsx"],"names":["React","View","StyleSheet","TouchableOpacity","KeyboardContext","Icon","CategoryItem","item","index","handleScrollToCategory","activeCategoryIndex","categoryColor","activeCategoryColor","setActiveCategoryIndex","useContext","handleSelect","category","styles","container","icon","create","width","height","justifyContent","alignItems","padding","borderRadius","textAlign"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,gBAA3B,QAAmD,cAAnD;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,SAASC,IAAT,QAAqB,QAArB;AAQA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAAgE;AAC1F,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA,aAAvB;AAAsCC,IAAAA,mBAAtC;AAA2DC,IAAAA;AAA3D,MACJb,KAAK,CAACc,UAAN,CAAiBV,eAAjB,CADF;;AAGA,QAAMW,YAAY,GAAG,MAAM;AACzBN,IAAAA,sBAAsB,CAACF,IAAI,CAACS,QAAN,CAAtB;AACAH,IAAAA,sBAAsB,CAACL,KAAD,CAAtB;AACD,GAHD;;AAKA,sBACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEO;AAA3B,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC;AAApB,kBACE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAEX,IAAI,CAACY,IADjB;AAEE,IAAA,QAAQ,EAAET,mBAAmB,KAAKF,KAFpC;AAGE,IAAA,WAAW,EAAEG,aAHf;AAIE,IAAA,WAAW,EAAEC;AAJf,IADF,CADF,CADF;AAYD,CArBM;AAuBP,MAAMK,MAAM,GAAGf,UAAU,CAACkB,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,OAAO,EAAE,CALA;AAMTC,IAAAA,YAAY,EAAE;AANL,GADoB;AAS/BP,EAAAA,IAAI,EAAE;AAAEQ,IAAAA,SAAS,EAAE;AAAb;AATyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { KeyboardContext } from '../contexts/KeyboardContext'\nimport type { CategoryNavigationItem, CategoryTypes } from '../types'\nimport { Icon } from './Icon'\n\ntype CategoryItemProps = {\n  item: CategoryNavigationItem\n  index: number\n  handleScrollToCategory: (category: CategoryTypes) => void\n}\n\nexport const CategoryItem = ({ item, index, handleScrollToCategory }: CategoryItemProps) => {\n  const { activeCategoryIndex, categoryColor, activeCategoryColor, setActiveCategoryIndex } =\n    React.useContext(KeyboardContext)\n\n  const handleSelect = () => {\n    handleScrollToCategory(item.category)\n    setActiveCategoryIndex(index)\n  }\n\n  return (\n    <TouchableOpacity onPress={handleSelect}>\n      <View style={styles.container}>\n        <Icon\n          iconName={item.icon}\n          isActive={activeCategoryIndex === index}\n          normalColor={categoryColor}\n          activeColor={activeCategoryColor}\n        />\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 28,\n    height: 28,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 3,\n    borderRadius: 6,\n  },\n  icon: { textAlign: 'center' },\n})\n"]}