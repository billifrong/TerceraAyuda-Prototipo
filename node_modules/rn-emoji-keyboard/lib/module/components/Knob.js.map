{"version":3,"sources":["Knob.tsx"],"names":["React","Animated","useWindowDimensions","StyleSheet","View","PanResponder","Keyboard","getHeight","KeyboardContext","Knob","offsetY","height","onClose","setIsExpanded","screenHeight","expandedHeight","defaultHeight","knobStyles","useContext","panResponder","useRef","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","dismiss","onPanResponderMove","event","dy","useNativeDriver","onPanResponderRelease","_","gestureState","spring","toValue","start","setValue","onShouldBlockNativeResponder","current","panHandlers","styles","panContainer","knob","paddingHorizontal","paddingTop","alignSelf","flexDirection","backgroundColor","width","marginBottom","borderRadius","shadowColor","shadowOpacity","shadowOffset","shadowRadius"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {\n  Animated,\n  useWindowDimensions,\n  StyleSheet,\n  View,\n  PanResponder,\n  Keyboard,\n} from 'react-native'\nimport { getHeight } from '../utils'\nimport { KeyboardContext } from '../contexts/KeyboardContext'\n\ntype KnobProps = {\n  offsetY: Animated.Value\n  height: Animated.Value\n  onClose: () => void\n  setIsExpanded: (isExpanded: boolean) => void\n}\n\nexport const Knob = ({ offsetY, height, onClose, setIsExpanded }: KnobProps) => {\n  const { height: screenHeight } = useWindowDimensions()\n  const { expandedHeight, defaultHeight, knobStyles } = React.useContext(KeyboardContext)\n\n  const panResponder = React.useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponderCapture: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponderCapture: () => true,\n\n      onPanResponderGrant: () => Keyboard.dismiss(),\n      onPanResponderMove: Animated.event([null, { dy: offsetY }], {\n        useNativeDriver: false,\n      }),\n      onPanResponderRelease: (_, gestureState) => {\n        Animated.spring(offsetY, {\n          useNativeDriver: false,\n          toValue: 0,\n        }).start()\n        if (gestureState.dy < -50) {\n          setIsExpanded(true)\n          Animated.spring(height, {\n            useNativeDriver: false,\n            toValue: getHeight(expandedHeight, screenHeight),\n          }).start()\n        } else if (gestureState.dy > 150) {\n          setIsExpanded(false)\n          height.setValue(getHeight(defaultHeight, screenHeight))\n          offsetY.setValue(0)\n          onClose()\n        } else {\n          setIsExpanded(false)\n          Animated.spring(height, {\n            useNativeDriver: false,\n            toValue: getHeight(defaultHeight, screenHeight),\n          }).start()\n        }\n      },\n      onShouldBlockNativeResponder: () => true,\n    })\n  ).current\n\n  return (\n    <View {...panResponder.panHandlers}>\n      <View style={styles.panContainer}>\n        <Animated.View style={[styles.knob, knobStyles]} />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  panContainer: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    alignSelf: 'center',\n    flexDirection: 'column-reverse',\n    backgroundColor: '#00000000',\n  },\n  knob: {\n    height: 6,\n    width: 50,\n    backgroundColor: '#fff',\n    marginBottom: 6,\n    alignSelf: 'center',\n    borderRadius: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.15,\n    shadowOffset: { width: 0, height: 0 },\n    shadowRadius: 5,\n  },\n})\n"]}