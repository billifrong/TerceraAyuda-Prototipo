{"version":3,"sources":["CategoryItem.tsx"],"names":["CategoryItem","item","index","handleScrollToCategory","activeCategoryIndex","categoryColor","activeCategoryColor","setActiveCategoryIndex","React","useContext","KeyboardContext","handleSelect","category","styles","container","icon","StyleSheet","create","width","height","justifyContent","alignItems","padding","borderRadius","textAlign"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAQO,MAAMA,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAAgE;AAC1F,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA,aAAvB;AAAsCC,IAAAA,mBAAtC;AAA2DC,IAAAA;AAA3D,MACJC,KAAK,CAACC,UAAN,CAAiBC,gCAAjB,CADF;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzBR,IAAAA,sBAAsB,CAACF,IAAI,CAACW,QAAN,CAAtB;AACAL,IAAAA,sBAAsB,CAACL,KAAD,CAAtB;AACD,GAHD;;AAKA,sBACE,oBAAC,6BAAD;AAAkB,IAAA,OAAO,EAAES;AAA3B,kBACE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC;AAApB,kBACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEb,IAAI,CAACc,IADjB;AAEE,IAAA,QAAQ,EAAEX,mBAAmB,KAAKF,KAFpC;AAGE,IAAA,WAAW,EAAEG,aAHf;AAIE,IAAA,WAAW,EAAEC;AAJf,IADF,CADF,CADF;AAYD,CArBM;;;;AAuBP,MAAMO,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,OAAO,EAAE,CALA;AAMTC,IAAAA,YAAY,EAAE;AANL,GADoB;AAS/BR,EAAAA,IAAI,EAAE;AAAES,IAAAA,SAAS,EAAE;AAAb;AATyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { KeyboardContext } from '../contexts/KeyboardContext'\nimport type { CategoryNavigationItem, CategoryTypes } from '../types'\nimport { Icon } from './Icon'\n\ntype CategoryItemProps = {\n  item: CategoryNavigationItem\n  index: number\n  handleScrollToCategory: (category: CategoryTypes) => void\n}\n\nexport const CategoryItem = ({ item, index, handleScrollToCategory }: CategoryItemProps) => {\n  const { activeCategoryIndex, categoryColor, activeCategoryColor, setActiveCategoryIndex } =\n    React.useContext(KeyboardContext)\n\n  const handleSelect = () => {\n    handleScrollToCategory(item.category)\n    setActiveCategoryIndex(index)\n  }\n\n  return (\n    <TouchableOpacity onPress={handleSelect}>\n      <View style={styles.container}>\n        <Icon\n          iconName={item.icon}\n          isActive={activeCategoryIndex === index}\n          normalColor={categoryColor}\n          activeColor={activeCategoryColor}\n        />\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 28,\n    height: 28,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 3,\n    borderRadius: 6,\n  },\n  icon: { textAlign: 'center' },\n})\n"]}