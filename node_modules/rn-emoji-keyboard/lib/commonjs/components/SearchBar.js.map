{"version":3,"sources":["SearchBar.tsx"],"names":["SearchBar","searchPhrase","setSearchPhrase","translation","setActiveCategoryIndex","closeSearchColor","searchBarStyles","searchBarTextStyles","searchBarPlaceholderColor","renderList","React","useContext","KeyboardContext","inputRef","useRef","handleSearch","text","searchIndex","findIndex","cat","title","clearPhrase","current","blur","styles","container","input","search","button","StyleSheet","create","marginTop","marginHorizontal","borderRadius","borderWidth","borderColor","flexDirection","alignItems","paddingVertical","paddingHorizontal","flex","marginRight"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEO,MAAMA,SAAS,GAAG,MAAM;AAC7B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,sBAJI;AAKJC,IAAAA,gBALI;AAMJC,IAAAA,eANI;AAOJC,IAAAA,mBAPI;AAQJC,IAAAA,yBARI;AASJC,IAAAA;AATI,MAUFC,KAAK,CAACC,UAAN,CAAiBC,gCAAjB,CAVJ;AAWA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAwB,IAAxB,CAAjB;;AAEA,QAAMC,YAAY,GAAIC,IAAD,IAAkB;AACrCd,IAAAA,eAAe,CAACc,IAAD,CAAf;AACA,QAAIA,IAAI,KAAK,EAAb,EAAiB,OAAOZ,sBAAsB,CAAC,CAAD,CAA7B;AACjB,UAAMa,WAAW,GAAGR,UAAU,CAACS,SAAX,CAAsBC,GAAD,IAASA,GAAG,CAACC,KAAJ,KAAc,QAA5C,CAApB;AACA,QAAIH,WAAW,KAAK,CAAC,CAArB,EAAwBb,sBAAsB,CAACa,WAAD,CAAtB;AACzB,GALD;;AAMA,QAAMI,WAAW,GAAG,MAAM;AAAA;;AACxBnB,IAAAA,eAAe,CAAC,EAAD,CAAf;AACA,yBAAAW,QAAQ,CAACS,OAAT,wEAAkBC,IAAlB;AACAnB,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACD,GAJD;;AAMA,sBACE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACoB,MAAM,CAACC,SAAR,EAAmBnB,eAAnB;AAAb,kBACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAE,CAACkB,MAAM,CAACE,KAAR,EAAenB,mBAAf,CADT;AAEE,IAAA,KAAK,EAAEN,YAFT;AAGE,IAAA,YAAY,EAAEc,YAHhB;AAIE,IAAA,WAAW,EAAEZ,WAAW,CAACwB,MAJ3B;AAKE,IAAA,GAAG,EAAEd,QALP;AAME,IAAA,oBAAoB,EAAEL;AANxB,IADF,EASG,CAAC,CAACP,YAAF,iBACC,oBAAC,6BAAD;AAAkB,IAAA,OAAO,EAAEoB,WAA3B;AAAwC,IAAA,KAAK,EAAEG,MAAM,CAACI;AAAtD,kBACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE,OADZ;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,WAAW,EAAEvB,gBAHf;AAIE,IAAA,WAAW,EAAEA;AAJf,IADF,CAVJ,CADF;AAsBD,CAhDM;;;;AAkDP,MAAMmB,MAAM,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,SAAS,EAAE,EADF;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,YAAY,EAAE,GAHL;AAITC,IAAAA,WAAW,EAAE,CAJJ;AAKTC,IAAAA,WAAW,EAAE,WALJ;AAMTC,IAAAA,aAAa,EAAE,KANN;AAOTC,IAAAA,UAAU,EAAE;AAPH,GADoB;AAU/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,eAAe,EAAE,CADZ;AAELC,IAAAA,iBAAiB,EAAE,EAFd;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAVwB;AAe/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,WAAW,EAAE;AADP;AAfuB,CAAlB,CAAf","sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { KeyboardContext } from '../contexts/KeyboardContext'\nimport { Icon } from './Icon'\n\nexport const SearchBar = () => {\n  const {\n    searchPhrase,\n    setSearchPhrase,\n    translation,\n    setActiveCategoryIndex,\n    closeSearchColor,\n    searchBarStyles,\n    searchBarTextStyles,\n    searchBarPlaceholderColor,\n    renderList,\n  } = React.useContext(KeyboardContext)\n  const inputRef = React.useRef<TextInput>(null)\n\n  const handleSearch = (text: string) => {\n    setSearchPhrase(text)\n    if (text === '') return setActiveCategoryIndex(0)\n    const searchIndex = renderList.findIndex((cat) => cat.title === 'search')\n    if (searchIndex !== -1) setActiveCategoryIndex(searchIndex)\n  }\n  const clearPhrase = () => {\n    setSearchPhrase('')\n    inputRef.current?.blur()\n    setActiveCategoryIndex(0)\n  }\n\n  return (\n    <View style={[styles.container, searchBarStyles]}>\n      <TextInput\n        style={[styles.input, searchBarTextStyles]}\n        value={searchPhrase}\n        onChangeText={handleSearch}\n        placeholder={translation.search}\n        ref={inputRef}\n        placeholderTextColor={searchBarPlaceholderColor}\n      />\n      {!!searchPhrase && (\n        <TouchableOpacity onPress={clearPhrase} style={styles.button}>\n          <Icon\n            iconName={'Close'}\n            isActive={true}\n            normalColor={closeSearchColor}\n            activeColor={closeSearchColor}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 16,\n    marginHorizontal: 16,\n    borderRadius: 100,\n    borderWidth: 1,\n    borderColor: '#00000011',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    flex: 1,\n  },\n  button: {\n    marginRight: 8,\n  },\n})\n"]}