{"version":3,"sources":["EmojiStaticKeyboard.tsx"],"names":["EmojiStaticKeyboard","width","activeCategoryIndex","containerStyles","onCategoryChangeFailed","categoryPosition","enableSearchBar","searchPhrase","renderList","disableSafeArea","React","useContext","KeyboardContext","keyboardState","flatListRef","useRef","getItemLayout","_","index","length","offset","renderItem","useCallback","props","useEffect","current","scrollToIndex","styles","container","containerShadow","containerReverse","children","flex","recentlyUsed","item","title","StyleSheet","create","borderRadius","backgroundColor","flexDirection","shadowColor","shadowOpacity","shadowOffset","height","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  useWindowDimensions,\n  Animated,\n  SafeAreaView,\n} from 'react-native'\nimport type { CategoryTypes, EmojisByCategory } from '../types'\nimport { EmojiCategory } from './EmojiCategory'\nimport { KeyboardContext } from '../contexts/KeyboardContext'\nimport { Categories } from './Categories'\nimport { SearchBar } from './SearchBar'\nimport { useKeyboardStore } from '../store/useKeyboardStore'\nimport { ConditionalContainer } from './ConditionalContainer'\n\nexport const EmojiStaticKeyboard = () => {\n  const { width } = useWindowDimensions()\n  const {\n    activeCategoryIndex,\n    containerStyles,\n    onCategoryChangeFailed,\n    categoryPosition,\n    enableSearchBar,\n    searchPhrase,\n    renderList,\n    disableSafeArea,\n  } = React.useContext(KeyboardContext)\n  const { keyboardState } = useKeyboardStore()\n  const flatListRef = React.useRef<FlatList>(null)\n\n  const getItemLayout = (_: CategoryTypes[] | null | undefined, index: number) => ({\n    length: width,\n    offset: width * index,\n    index,\n  })\n\n  const renderItem = React.useCallback((props) => <EmojiCategory {...props} />, [])\n\n  React.useEffect(() => {\n    flatListRef.current?.scrollToIndex({\n      index: activeCategoryIndex,\n    })\n  }, [activeCategoryIndex])\n\n  return (\n    <View\n      style={[\n        styles.container,\n        styles.containerShadow,\n        categoryPosition === 'top' && disableSafeArea && styles.containerReverse,\n        containerStyles,\n      ]}>\n      <ConditionalContainer\n        condition={!disableSafeArea}\n        container={(children) => (\n          <SafeAreaView\n            style={[styles.flex, categoryPosition === 'top' && styles.containerReverse]}>\n            {children}\n          </SafeAreaView>\n        )}>\n        <>\n          {enableSearchBar && <SearchBar />}\n          <Animated.FlatList\n            extraData={[keyboardState.recentlyUsed.length, searchPhrase]}\n            data={renderList}\n            keyExtractor={(item: EmojisByCategory) => item.title}\n            renderItem={renderItem}\n            removeClippedSubviews={true}\n            ref={flatListRef}\n            onScrollToIndexFailed={onCategoryChangeFailed}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            pagingEnabled\n            scrollEventThrottle={16}\n            getItemLayout={getItemLayout}\n            scrollEnabled={false}\n            initialNumToRender={1}\n            windowSize={2}\n            maxToRenderPerBatch={1}\n            keyboardShouldPersistTaps=\"handled\"\n          />\n          <Categories />\n        </>\n      </ConditionalContainer>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  flex: { flex: 1 },\n  container: {\n    flex: 1,\n    borderRadius: 16,\n    backgroundColor: '#fff',\n  },\n  containerReverse: { flexDirection: 'column-reverse' },\n  containerShadow: {\n    shadowColor: 'black',\n    shadowOpacity: 0.15,\n    shadowOffset: { width: 0, height: 0 },\n    shadowRadius: 5,\n    elevation: 10,\n  },\n})\n"]}