{"version":3,"sources":["EmojiCategory.tsx"],"names":["emptyEmoji","emoji","name","v","EmojiCategory","item","title","data","onEmojiSelected","emojiSize","numberOfColumns","width","hideHeader","headerStyles","translation","categoryPosition","React","useContext","KeyboardContext","setKeyboardState","empty","setEmpty","useState","useEffect","length","fillWithEmpty","Array","fill","getItemLayout","_","index","offset","Math","ceil","handleEmojiPress","useCallback","parsedEmoji","type","payload","renderItem","props","styles","container","sectionTitle","footerFloating","footer","StyleSheet","create","flex","paddingHorizontal","marginTop","opacity","marginBottom","marginLeft","height"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport { StyleSheet, View, Text, FlatList } from 'react-native'\nimport type { EmojisByCategory, JsonEmoji } from '../types'\nimport { SingleEmoji } from './SingleEmoji'\nimport { KeyboardContext } from '../contexts/KeyboardContext'\nimport { useKeyboardStore } from '../store/useKeyboardStore'\nimport { parseEmoji } from '../utils'\n\nconst emptyEmoji: JsonEmoji = {\n  emoji: '',\n  name: 'blank emoji',\n  v: '0',\n}\n\nexport const EmojiCategory = ({ item: { title, data } }: { item: EmojisByCategory }) => {\n  const {\n    onEmojiSelected,\n    emojiSize,\n    numberOfColumns,\n    width,\n    hideHeader,\n    headerStyles,\n    translation,\n    categoryPosition,\n  } = React.useContext(KeyboardContext)\n\n  const { setKeyboardState } = useKeyboardStore()\n\n  const [empty, setEmpty] = React.useState<JsonEmoji[]>([])\n\n  React.useEffect(() => {\n    if (data.length % numberOfColumns) {\n      const fillWithEmpty = new Array(numberOfColumns - (data.length % numberOfColumns)).fill(\n        emptyEmoji\n      )\n      setEmpty(fillWithEmpty)\n    }\n  }, [numberOfColumns, data])\n\n  const getItemLayout = (_: JsonEmoji[] | null | undefined, index: number) => ({\n    length: emojiSize ? emojiSize : 0,\n    offset: emojiSize * Math.ceil(index / numberOfColumns),\n    index,\n  })\n\n  const handleEmojiPress = React.useCallback(\n    (emoji: JsonEmoji) => {\n      if (emoji.name === 'blank emoji') return\n      const parsedEmoji = parseEmoji(emoji)\n      onEmojiSelected(parsedEmoji)\n      setKeyboardState({ type: 'RECENT_EMOJI_ADD', payload: emoji })\n    },\n    [onEmojiSelected, setKeyboardState]\n  )\n\n  const renderItem = React.useCallback(\n    (props) => (\n      <SingleEmoji {...props} onPress={() => handleEmojiPress(props.item)} emojiSize={emojiSize} />\n    ),\n    [emojiSize, handleEmojiPress]\n  )\n\n  return (\n    <View style={[styles.container, { width: width }]}>\n      {!hideHeader && <Text style={[styles.sectionTitle, headerStyles]}>{translation[title]}</Text>}\n      <FlatList\n        data={[...data, ...empty]}\n        keyExtractor={(emoji) => emoji.name}\n        numColumns={numberOfColumns}\n        renderItem={renderItem}\n        removeClippedSubviews={true}\n        getItemLayout={getItemLayout}\n        ListFooterComponent={() => (\n          <View style={categoryPosition === 'floating' ? styles.footerFloating : styles.footer} />\n        )}\n        windowSize={20}\n        keyboardShouldPersistTaps=\"handled\"\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 10,\n    marginTop: 6,\n  },\n  sectionTitle: {\n    opacity: 0.6,\n    marginTop: 12,\n    marginBottom: 6,\n    marginLeft: 12,\n  },\n  footer: { height: 8 },\n  footerFloating: { height: 70 },\n})\n"]}