{"version":3,"sources":["ConditionalContainer.tsx"],"names":["ConditionalContainer","children","container","condition","IsSafeAreaWrapper","isSafeArea","props"],"mappings":";;;;;;;AAAA;;AACA;;;;AAOO,MAAMA,oBAAoB,GAAG,CAAC;AACnCC,EAAAA,QADmC;AAEnCC,EAAAA,SAFmC;AAGnCC,EAAAA;AAHmC,CAAD,kBAIH,4DAAGA,SAAS,GAAGD,SAAS,CAACD,QAAD,CAAZ,GAAyBA,QAArC,CAJ1B;;;;AAUA,MAAMG,iBAAiB,GAAG,CAAC;AAAEH,EAAAA,QAAF;AAAYI,EAAAA,UAAZ;AAAwB,KAAGC;AAA3B,CAAD,KAC/BD,UAAU,gBACR,6BAAC,yBAAD,EAAkBC,KAAlB,EAA0BL,QAA1B,CADQ,gBAGR,6BAAC,iBAAD,EAAUK,KAAV,EAAkBL,QAAlB,CAJG","sourcesContent":["import React, { ReactNode } from 'react'\nimport { SafeAreaView, View, ViewProps } from 'react-native'\n\ntype ConditionalContainerTypes = {\n  children: ReactNode\n  container: (children: ReactNode) => ReactNode\n  condition: boolean\n}\nexport const ConditionalContainer = ({\n  children,\n  container,\n  condition,\n}: ConditionalContainerTypes) => <>{condition ? container(children) : children}</>\n\ntype IsSafeAreaWrapperProps = {\n  children: ReactNode\n  isSafeArea: boolean\n} & ViewProps\nexport const IsSafeAreaWrapper = ({ children, isSafeArea, ...props }: IsSafeAreaWrapperProps) =>\n  isSafeArea ? (\n    <SafeAreaView {...props}>{children}</SafeAreaView>\n  ) : (\n    <View {...props}>{children}</View>\n  )\n"]}