{"version":3,"sources":["utils.ts"],"names":["getHeight","value","screenHeight","parseInt","replace","exhaustiveTypeCheck","arg","strict","console","log","Error","parseEmoji","emoji","name","unicode_version","v","slug","getCategoryIndex","disabledCategory","category","index","CATEGORIES","filter","includes","indexOf"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,SAAS,GAAG,CAACC,KAAD,EAAyBC,YAAzB,KACvB,OAAOD,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAqCC,YAAY,GAAG,GAAhB,GAAuBC,QAAQ,CAACF,KAAK,CAACG,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAD,EAAyB,EAAzB,CAD9D;;;;AAGA,MAAMC,mBAAmB,GAAG,CAACC,GAAD,EAAaC,MAAM,GAAG,IAAtB,KAA+B;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BH,GAAI,EAA9C;;AACA,MAAIC,MAAJ,EAAY;AACV,UAAM,IAAIG,KAAJ,CAAW,8BAA6BJ,GAAI,EAA5C,CAAN;AACD;AACF,CALM;;;;AAOA,MAAMK,UAAU,GAAIC,KAAD,KAAuB;AAC/CC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADmC;AAE/CD,EAAAA,KAAK,EAAEA,KAAK,CAACA,KAFkC;AAG/CE,EAAAA,eAAe,EAAEF,KAAK,CAACG,CAHwB;AAI/CC,EAAAA,IAAI,EAAEJ,KAAK,CAACC,IAAN,CAAWT,OAAX,CAAmB,IAAnB,EAAyB,GAAzB;AAJyC,CAAvB,CAAnB;;;;AAOA,MAAMa,gBAAgB,GAAG,CAACC,gBAAD,EAAoCC,QAApC,MAAiE;AAC/FC,EAAAA,KAAK,EAAEC,kBAAWC,MAAX,CAAmBT,IAAD,IAAU,CAACK,gBAAgB,CAACK,QAAjB,CAA0BV,IAA1B,CAA7B,EAA8DW,OAA9D,CAAsEL,QAAtE;AADwF,CAAjE,CAAzB","sourcesContent":["import { CATEGORIES, CategoryTypes, JsonEmoji } from './types'\n\nexport const getHeight = (value: string | number, screenHeight: number) =>\n  typeof value === 'number' ? value : (screenHeight / 100) * parseInt(value.replace('%', ''), 10)\n\nexport const exhaustiveTypeCheck = (arg: never, strict = true) => {\n  console.log(`unhandled union case for : ${arg}`)\n  if (strict) {\n    throw new Error(`unhandled union case for : ${arg}`)\n  }\n}\n\nexport const parseEmoji = (emoji: JsonEmoji) => ({\n  name: emoji.name,\n  emoji: emoji.emoji,\n  unicode_version: emoji.v,\n  slug: emoji.name.replace(/ /g, '_'),\n})\n\nexport const getCategoryIndex = (disabledCategory: CategoryTypes[], category: CategoryTypes) => ({\n  index: CATEGORIES.filter((name) => !disabledCategory.includes(name)).indexOf(category),\n})\n"]}