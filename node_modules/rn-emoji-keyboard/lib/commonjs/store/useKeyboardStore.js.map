{"version":3,"sources":["useKeyboardStore.ts"],"names":["globalKeyboardState","recentlyUsed","keyboardStateListeners","Set","setKeyboardState","action","forEach","listener","useKeyboardStore","keyboardState","setState","add","delete"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAEA,IAAIA,mBAAkC,GAAG;AACvCC,EAAAA,YAAY,EAAE;AADyB,CAAzC;AAKA,MAAMC,sBAAsB,GAAG,IAAIC,GAAJ,EAA/B;;AAEA,MAAMC,gBAAgB,GAAIC,MAAD,IAA4B;AACnDL,EAAAA,mBAAmB,GAAG,uBAAgBA,mBAAhB,EAAqCK,MAArC,CAAtB;AACAH,EAAAA,sBAAsB,CAACI,OAAvB,CAAgCC,QAAD,IAAcA,QAAQ,EAArD;AACD,CAHD;;AAKO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,QAAM,CAACC,aAAD,EAAgBC,QAAhB,IAA4B,qBAASV,mBAAT,CAAlC;AAEA,wBAAU,MAAM;AACd,UAAMO,QAAQ,GAAG,MAAMG,QAAQ,CAACV,mBAAD,CAA/B;;AACAE,IAAAA,sBAAsB,CAACS,GAAvB,CAA2BJ,QAA3B;AACA,WAAO,MAAM;AACXL,MAAAA,sBAAsB,CAACU,MAAvB,CAA8BL,QAA9B;AACD,KAFD;AAGD,GAND,EAMG,CAACE,aAAD,CANH;AAQA,SAAO;AAAEA,IAAAA,aAAF;AAAiBL,IAAAA;AAAjB,GAAP;AACD,CAZM","sourcesContent":["import { useEffect, useState } from 'react'\nimport type { KeyboardAction, KeyboardState } from './reducers'\nimport keyboardReducer from './reducers'\n\nlet globalKeyboardState: KeyboardState = {\n  recentlyUsed: [],\n}\n\ntype KeyboardStateSetter = () => any\nconst keyboardStateListeners = new Set<KeyboardStateSetter>()\n\nconst setKeyboardState = (action: KeyboardAction) => {\n  globalKeyboardState = keyboardReducer(globalKeyboardState, action)\n  keyboardStateListeners.forEach((listener) => listener())\n}\n\nexport const useKeyboardStore = () => {\n  const [keyboardState, setState] = useState(globalKeyboardState)\n\n  useEffect(() => {\n    const listener = () => setState(globalKeyboardState)\n    keyboardStateListeners.add(listener)\n    return () => {\n      keyboardStateListeners.delete(listener)\n    }\n  }, [keyboardState])\n\n  return { keyboardState, setKeyboardState }\n}\n"]}